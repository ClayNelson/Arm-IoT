name: Build and Deploy ARM IoT Application

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi sshpass
          arm-none-eabi-gcc --version
      
      - name: Build
        run: |
          mkdir -p build
          cd build
          cmake ..
          make
      
      - name: Package Build
        run: |
          tar -czf build.tar.gz build/
          echo "Build artifacts created successfully"
      
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AVH_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Generate public key with modern format
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
          chmod 644 ~/.ssh/id_rsa.pub
          
          echo "Host proxy
            HostName proxy.app.avh.corellium.com
            User 3ac4e20f-02f4-45bb-bfbd-9f6e3029f981
            IdentityFile ~/.ssh/id_rsa
            PubkeyAuthentication yes
            PreferredAuthentications publickey
            PubkeyAcceptedKeyTypes rsa-sha2-512,rsa-sha2-256,ssh-rsa
            HostKeyAlgorithms ecdsa-sha2-nistp256
            ServerAliveInterval 30
            StrictHostKeyChecking no
            LogLevel DEBUG3" > ~/.ssh/config
          chmod 600 ~/.ssh/config
          
          echo "Key details:"
          ssh-keygen -l -f ~/.ssh/id_rsa
          
          echo "Testing direct connection to proxy..."
          ssh -v -i ~/.ssh/id_rsa 3ac4e20f-02f4-45bb-bfbd-9f6e3029f981@proxy.app.avh.corellium.com 'echo Connected to proxy'
          
          echo "\nTesting connection to target..."
          for i in {1..3}; do
            echo "\nAttempt $i..."
            sshpass -p 'raspberry' ssh -v -o StrictHostKeyChecking=no -J 3ac4e20f-02f4-45bb-bfbd-9f6e3029f981@proxy.app.avh.corellium.com pi@10.11.0.1 'echo Connected to target' && break || sleep 5
          done
      
      - name: Deploy to AVH
        run: |
          # Verify build artifact exists
          if [ ! -f build/blink ]; then
            echo "Error: build/blink does not exist"
            exit 1
          fi
          
          echo "Creating app directory..."
          sshpass -p 'raspberry' ssh -v -o StrictHostKeyChecking=no -J 3ac4e20f-02f4-45bb-bfbd-9f6e3029f981@proxy.app.avh.corellium.com pi@10.11.0.1 'mkdir -p ~/app'
          
          echo "\nCopying binary..."
          sshpass -p 'raspberry' scp -v -o StrictHostKeyChecking=no -o ProxyJump=3ac4e20f-02f4-45bb-bfbd-9f6e3029f981@proxy.app.avh.corellium.com build/blink pi@10.11.0.1:~/app/
          
          echo "\nExecuting binary..."
          sshpass -p 'raspberry' ssh -v -o StrictHostKeyChecking=no -J 3ac4e20f-02f4-45bb-bfbd-9f6e3029f981@proxy.app.avh.corellium.com pi@10.11.0.1 'chmod +x ~/app/blink && ~/app/blink'
