name: Build and Deploy ARM IoT Application

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install ARM toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi
          arm-none-eabi-gcc --version
      
      - name: Build
        run: |
          mkdir -p build
          cd build
          cmake ..
          make
      
      - name: Package Build
        run: |
          tar -czf build.tar.gz build/
          echo "Build artifacts created successfully"
      
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AVH_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Generate public key with newer algorithms and no comment
          ssh-keygen -y -f ~/.ssh/id_rsa | cut -d' ' -f1-2 > ~/.ssh/id_rsa.pub
          chmod 644 ~/.ssh/id_rsa.pub
          
          echo "Host proxy
            HostName proxy.app.avh.corellium.com
            User claynelson
            IdentityFile ~/.ssh/id_rsa
            PubkeyAuthentication yes
            PreferredAuthentications publickey
            PubkeyAcceptedKeyTypes rsa-sha2-512,rsa-sha2-256,ssh-rsa
            HostKeyAlgorithms ecdsa-sha2-nistp256
            ServerAliveInterval 30
            StrictHostKeyChecking no" > ~/.ssh/config
          chmod 600 ~/.ssh/config
          
          echo "Private key type:"
          ssh-keygen -l -f ~/.ssh/id_rsa
          echo "\nPublic key type:"
          ssh-keygen -l -f ~/.ssh/id_rsa.pub
          echo "\nPublic key contents:"
          cat ~/.ssh/id_rsa.pub
          
          # Try connection with maximum verbosity and explicit key type
          ssh -vvv -o 'IdentityFile ~/.ssh/id_rsa' -o 'PubkeyAcceptedKeyTypes rsa-sha2-512,rsa-sha2-256,ssh-rsa' proxy 'echo Connected'
      
      - name: Deploy to AVH
        run: |
          ssh -J proxy pi@10.11.0.1 'mkdir -p ~/app'
          scp -o ProxyJump=proxy build/blink pi@10.11.0.1:~/app/
          ssh -J proxy pi@10.11.0.1 'chmod +x ~/app/blink && ~/app/blink'
