name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake make gcc sshpass \
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf

      - name: Build
        run: |
          echo "Creating build directory..."
          mkdir -p build
          cd build
          
          echo "Running CMake with ARM toolchain..."
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_TOOLCHAIN_FILE=../toolchains/arm-toolchain.cmake ..
          
          echo "Running Make..."
          make VERBOSE=1
          
          if [ ! -f blink ]; then
            echo "Error: Build step did not produce the 'blink' binary."
            exit 1
          fi
          
          echo "Checking binary type:"
          file blink

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AVH_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Generate public key with modern format
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
          chmod 644 ~/.ssh/id_rsa.pub
          
          cat > ~/.ssh/config << 'EOF'
          Host proxy
            HostName proxy.app.avh.corellium.com
            User 3ac4e20f-02f4-45bb-bfbd-9f6e3029f981
            IdentityFile ~/.ssh/id_rsa
            PreferredAuthentications publickey
            PubkeyAcceptedKeyTypes rsa-sha2-512,rsa-sha2-256,ssh-rsa
            HostKeyAlgorithms ecdsa-sha2-nistp256
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null

          Host target
            HostName 10.11.0.1
            User pi
            ProxyCommand ssh proxy -W %h:%p
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null
          EOF
          chmod 600 ~/.ssh/config

      - name: Deploy to AVH
        run: |
          echo "Creating app directory..."
          sshpass -p 'raspberry' ssh target 'mkdir -p ~/app'
          
          echo "Copying binary..."
          sshpass -p 'raspberry' scp -F ~/.ssh/config build/blink target:~/app/
          
          echo "Setting permissions..."
          sshpass -p 'raspberry' ssh target 'sudo chown root:root ~/app/blink && sudo chmod +s ~/app/blink'
          
          echo "Starting blink program..."
          sshpass -p 'raspberry' ssh target '~/app/blink'
